#include <iostream>
#include <fstream>
#include <string>
#include <map>
using namespace std;

// Prototypen:
  void line(),perfusor_von_med(),abfrage_gamma();
  double empfehlung_urapidil(),empfehlung_urapidil(),empfehlung_propofol(),
  empfehlung_amiodaron(),empfehlung_clonidin(),empfehlung_sufentanyl(),empfehlung_midazolam();
  double rate_von_gamma(),norepinephrinf(),urapdilf(),dexdorf(),clonidinf(),
  epinephrinf(),propofolf(),amiodaronf(),sufentanylf(),midazolamf();
  
// Variablen:
  int med,prog;
  double mla,ma,xa;
  double mlh,y,tf,kg,kf,ko;
  std::string name,aeinheit,yeinheit,yzeit,traeger = "NaCl 0.9 %";

int main(){

fstream medication;

map<int, string>med_name =
 {
  {1,"Norepinephrin"},
  {2,"Epinephrin"},
  {3,"Vasopressin"},
  {4,"Enoximon"},
  {5,"Dexmedetomidin"},
  {6,"Amiodaron"},
  {7,"Urapidil"},
  {8,"Clonidin"},
  {9,"Propofol"},
  {10,"Midazolam"},
  {11,"Morphin"},
  {12,"Fentanyl"},
  {13,"Sufentanyl"},
  {14,"Piritramid"}
 };

   cout
    << "\nPERFUSOR 0.1.3\n"
    << "\n01 Norepinephrin"
    << "\n02 Urapidil"
    << "\n03 Dexmedetomidin"
    << "\n04 Epinephrin"
    << "\n05 Propofol"
    << "\n06 Amiodaron"
    << "\n07 Sufentanyl"
    << "\n08 Midazolam"
    << "\n09 Clonidin\n";
    line();
   cout 
    << "\nWirkstoff (1,2,3...,10): ";
   
   double medication_specs[][8] {
   {5,5,1,60,1000,0.1,0.01,80}, //nor
   {5,25,4,1,1,4,0.1,80},       //ura
   {4,0.4,1,1,1,8,0.1,80},      //dex
   {1,1,5,60,1000,0.1,0.01,80}, //epi
   {50,500,1,1,1,10,0.5,80},    //pro
   {3,150,6,1,1,20,0.5,80},     //ami
   {5,250,1,1,1,0.5,0.025,80},  //suf
   {0,0,0,0,0,0,0,80},          //mid
   {1,150,10,1,1,20,0.8,80}     //clo
   };
   
   cin >> med;
   
   // Switch Perfusor:
   switch (med){
     case 1: name = "Norepinephrin 5 mg"; yzeit = "min"; yeinheit = "mcg"; aeinheit = "mg";
             norepinephrinf();abfrage_gamma();break;
     case 2: name = "Urapidil"; yzeit = "h"; yeinheit = "mg"; aeinheit = "mg";
             urapdilf();empfehlung_urapidil();break;
     case 3: name = "Dexdor"; yzeit = "h"; yeinheit = "mcg";  aeinheit = "mcg";
             dexdorf();abfrage_gamma();break;
     case 4: name = "Epinephrin"; yzeit = "min"; yeinheit = "mcg"; aeinheit = "mg";
             epinephrinf();abfrage_gamma();break;
     case 5: name = "Propofol 1%"; yzeit = "h"; yeinheit = "mg"; aeinheit = "mg";
             propofolf();empfehlung_propofol();break;
     case 6: name = "Amiodaron"; yzeit = "h"; yeinheit = "mg"; aeinheit = "mg"; traeger = "Glucose 5 %";
             amiodaronf();empfehlung_amiodaron();break; 
     case 7: name = "Sufentanyl"; yzeit = "h"; yeinheit = "mcg"; aeinheit = "mg";
             sufentanylf();empfehlung_sufentanyl();break;
     case 8: name = "Midazolam"; yzeit = "h"; yeinheit = "mcg"; aeinheit = "mcg";
             amiodaronf();empfehlung_amiodaron();break; 
     case 9: name = "Clonidin"; yzeit = "h"; yeinheit = "mcg"; aeinheit = "mcg";
             clonidinf();empfehlung_clonidin();break;      
     case 10: name = "Enoximon"; yzeit = "min"; yeinheit = "mcg"; aeinheit = "mg";
             norepinephrinf();abfrage_gamma();break;                   
     default: cout << "Unbekannt.\n";}
   
   // Ausgabe Perfusor:
   line();
  
   perfusor_von_med();
   
   rate_von_gamma();
   
   cout << "Laufrate: " << mlh << " ml/h" << endl
        << "Gamma: " << y << " " << yeinheit << "/kg/" << yzeit << endl
        << "bei " << kg << " kg Koerpergewicht" << endl
        << medication_specs /*[med-1][6]*/;
  }
   
   void line(){
   cout << endl << "------------------------------------" << endl;}

   

   // Perfusor-Parameter:
   double norepinephrinf(){
   return mla = 5, ma = 5, xa = 1, tf = 60, kf = 1000, ko = 0.1;}

   double urapdilf(){
   return mla = 5, ma = 25, xa = 4, tf = 1, kf = 1, ko = 4;}

   double dexdorf(){
   return mla = 4, ma = 0.4, xa = 1, tf = 1, kf = 1, ko = 8;}
   
   double epinephrinf(){
   return mla = 1, ma = 1, xa = 5, tf = 60, kf = 1000, ko = 0.1;}

   double propofolf(){
   return mla = 50, ma = 500, xa = 1, tf = 1, kf = 1, ko = 10;}
   
   double amiodaronf(){
   return mla = 3, ma = 150, xa = 6, tf = 1, kf = 1, ko = 20;}

   double sufentanylf(){
   return mla = 5, ma = 250, xa = 1, tf = 1, kf = 1, ko = 0.5;}
   
   double midazolamf(){
   return mla = 3, ma = 150, xa = 6, tf = 1, kf = 1, ko = 20;}
   
   double clonidinf(){
   return mla = 1, ma = 150, xa = 10, tf = 1, kf = 1, ko = 20;}

   // Gamma-Abfrage & -Empfehlungen:
   void abfrage_gamma(){
   cout << endl << "Gamma in " << yeinheit <<"/kg/" << yzeit << " (z.B. 0.04): "; cin >> y;
   cout << endl << "Gewicht in kg (Standard ist 80): "; cin >> kg;}
   
   double empfehlung_urapidil(){
   return y = 0.1, kg = 80;}
   
   double empfehlung_propofol(){
   return y = 0.5, kg = 80;}
   
   double empfehlung_amiodaron(){
   return y = 0.5, kg = 80;}
   
   double empfehlung_sufentanyl(){
   return y = 0.025, kg = 80;}
   
   double empfehlung_midazolam(){
   return y = 0.1, kg = 80;}

   double empfehlung_clonidin(){
   return y = 0.8, kg = 80;}

   // Herstellung der Perfusor-Spritze:
   void perfusor_von_med(){
   cout << "\n" << name << "-Perfusor:\n\n";
   cout << xa << " Amp. je " << ma << " " << aeinheit << " (" << mla << " ml)"
   << endl << "mit " << 50-xa*mla << " ml " << traeger << endl << endl;}

   // Perfusor-Laufrate:
   double rate_von_gamma(){
   return mlh = (y*tf*kg)/(kf*ko);}